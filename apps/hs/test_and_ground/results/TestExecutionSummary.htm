<html><head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>Test Execution Summary</title>
    <style type="text/css" media="screen">
p {margin-top:0in; margin-bottom:.0001pt; margin-left:0in; margin-right:0in;}
ul, ol  {margin-top:0in; margin-bottom:.0001pt; margin-left:0in; margin-right:0in;}
body, table { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; }
table.display { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; width: 100%;}
table.display2 { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; width: 95%;}
.display td, .display2 td { vertical-align: top; font-size: 9pt;}
table.list { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; width: 95%; border-width: 1px; border-style: solid; border-color: #333399; border-collapse: collapse; padding: 5px 5px 5px 5px; }
.list th { color: #000000; background-color: #F9F9E3; border-width: 1px; border-style: solid; border-color: #333399; }
.list td { background-color: #F9F7F7; vertical-align: top; border-width: 1px; border-style: solid; border-color: #333399; padding: 5px 5px 5px 5px; }
table.list2 { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; border-width: 0px; border-style: solid; border-color: #333399; padding: 0px 0px 0px 0px; }
.list2 th { font-size: 11pt; color: #333399; text-align: left; text-decoration: underline; background-color: #FFFFFF; padding: 2px 2px 2px 2px; }
.list2 td { background-color: #FFFFFF; vertical-align: top; padding: 2px 2px 2px 2px; }
table.list3 { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; width: 100%; border-width: 1px; border-style: solid; border-color: #333399; border-collapse: collapse; padding: 0px 0px 0px 0px; }
.list3 th { color: #000000; background-color: #ECECEC; border-width: 1px 0px 1px 0px; border-style: solid; border-color: #333399; padding: 5px 5px 5px 5px; }
.list3 td { background-color: #F9F7F7; vertical-align: top; border-style: solid; border-color: #333399; border-width: 1px 0px 1px 0px; padding: 5px 5px 5px 5px; }
td.logo { width: 10%; }
.border { border-width: 0px; border-style: solid; border-color: #333399; padding: 2px 2px 2px 2px; }
.center { text-align: center; }
.right { text-align: right; }
.nowrap { white-space: nowrap; }
.title { font-size: 16pt; color: #333399; font-weight: bold; text-align: center; }
.date { font-size: 10pt; color: #333399; font-weight: bold; text-align: right; }
.header { font-size: 11pt; color: #000000; text-align: center; }
.footer { font-size: 9pt; color: #999999; text-align: left; }
.heading1 { font-size: 11pt; color: #000000; font-weight: bold; background-color: #F6E78C; }
.heading2 { font-size: 11pt; color: #333399; font-weight: bold; background-color: #F6E78C; }
.heading3 { font-size: 11pt; color: #000000; font-weight: bold; background-color: #E6E6CB; }
.heading4 { font-size: 11pt; color: #333399; font-weight: bold; background-color: #E6E6CB; }
.heading5 { font-size: 11pt; color: #000000; font-weight: bold; background-color: #CFCF9D; }
.heading6 { font-size: 11pt; color: #333399; font-weight: bold; background-color: #CFCF9D; }
.heading7 { font-size: 15pt; color: #000000; font-weight: bold; background-color: #CFCF9D; }
.heading8 { font-size: 10pt; color: #000000; font-weight: bold; text-align: center; background-color: #F5EFCA; }
.heading9 { font-size: 10pt; color: #000000; font-weight: bold; background-color: #F6E78C; }
.grouping1 { font-size: 10pt; color: #333399; font-weight: bold; background-color: #CFCF9D; }
.grouping2 { font-size: 10pt; color: #000000; font-weight: bold; background-color: #CFCF9D; }
.grouping3 { font-size: 9pt; color: #333399; font-weight: bold; background-color: #E6E6CB; }
.odd_row { background-color: #F8F3F7; }
.even_row { background-color: #FFFBFF; }
.level1 { background-color: #FFEFF7; padding: 2px 2px 2px 2px; }
.level2 { background-color: #F7E7EF; padding: 2px 2px 2px 2px; }
.level2_indent { background-color: #F7E7EF; padding: 2px 2px 2px 12px; }
.level3 { background-color: #EFDFE7; padding: 2px 2px 2px 2px; }
.level3_indent { background-color: #EFDFE7; padding: 2px 2px 2px 22px; }
.level4 { background-color: #E7D7DF; padding: 2px 2px 2px 2px; }
.level4_indent { background-color: #E7D7DF; padding: 2px 2px 2px 32px; }
.level5 { background-color: #DFCFD7; padding: 2px 2px 2px 2px; }
.level5_indent { background-color: #DFCFD7; padding: 2px 2px 2px 42px; }
.level6 { background-color: #D1BFC8; padding: 2px 2px 2px 2px; }
.level6_indent { background-color: #D1BFC8; padding: 2px 2px 2px 52px; }
.level7 { background-color: #C2B0B9; padding: 2px 2px 2px 2px; }
.level7_indent { background-color: #C2B0B9; padding: 2px 2px 2px 62px; }
.level8 { background-color: #B0A0A8; padding: 2px 2px 2px 2px; }
.level8_indent { background-color: #B0A0A8; padding: 2px 2px 2px 72px; }
.indent_transparent { padding: 0px 0px 0px 12px }
.context_backward_level4_indent { background-color: #E7D7DF; padding: 2px 2px 2px 2px; }
.context_backward_level3_indent { background-color: #EFDFE7; padding: 2px 2px 2px 12px; }
.context_backward_level2_indent { background-color: #F7E7EF; padding: 2px 2px 2px 22px; }
.context_backward_level1_indent { background-color: #FFEFF7; padding: 2px 2px 2px 32px; }
.context { color: #333399; font-weight: bold; background-color: #FFFFFF; border-style: solid; border-color: #000000; border-width: 1px; padding: 2px 2px 2px 2px; }
.context_indent { color: #333399; font-weight: bold; background-color: #FFFFFF; border-style: solid; border-color: #000000; border-width: 1px; padding: 2px 2px 2px 42px; }
.context_forward_level1_indent { background-color: #FFEFF7; padding: 2px 2px 2px 52px; }
.context_forward_level2_indent { background-color: #F7E7EF; padding: 2px 2px 2px 62px; }
.context_forward_level3_indent { background-color: #EFDFE7; padding: 2px 2px 2px 72px; }
.context_forward_level4_indent { background-color: #E7D7DF; padding: 2px 2px 2px 82px; }
.document_level1 { background-color: #FFFFFF; padding: 2px 2px 2px 2px; }
.document_level2 { background-color: #FFFFFF; padding: 2px 2px 2px 12px; }
.document_level3 { background-color: #FFFFFF; padding: 2px 2px 2px 22px; }
.document_level4 { background-color: #FFFFFF; padding: 2px 2px 2px 32px; }
.underline { text-decoration: underline; }
.bold { color: #000000; font-weight: bold; }
.bold_large { font-size: 12pt; color: #000000; font-weight: bold; }
.bold_very_large { font-size: 14pt; color: #000000; font-weight: bold; }
.bold_italic { color: #000000; font-weight: bold; font-style: italic; }
.bold_underline { color: #000000; font-weight: bold; text-decoration: underline; }
.bold_color { color: #333399; font-weight: bold; }
.bold_color_large { font-size: 12pt; color: #333399; font-weight: bold; }
.bold_color_italic { color: #333399; font-weight: bold; font-style: italic; }
.bold_color_underline { color: #333399; font-weight: bold; text-decoration: underline; }
.bold_color_underline_large { font-size: 11pt; color: #333399; font-weight: bold; text-decoration: underline; }
.hr_default { height:1px; width:100%; color: #000000; background:#000000; }
.calendar_no_date_cell { background-color: #F3F3F3; }
</style>

    <style type="text/css" media="print">
p {margin-top:0in; margin-bottom:.0001pt; margin-left:0in; margin-right:0in;}
ul, ol  {margin-top:0in; margin-bottom:.0001pt; margin-left:0in; margin-right:0in;}
thead { display: table-header-group; }
tfoot { display: table-footer-group; }
tbody { display:table-row-group; }
body, table { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; }
table.display { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; width: 100%;}
table.display2 { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; width: 95%;}
.display td, .display2 td { vertical-align: top; font-size: 9pt;}
table.list { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; width: 95%; border-width: 1px; border-style: solid; border-color: #333399; border-collapse: collapse; padding: 5px 5px 5px 5px; }
.list th { color: #000000; background-color: #F9F9E3; border-width: 1px; border-style: solid; border-color: #333399; }
.list td { background-color: #F9F7F7; vertical-align: top; border-width: 1px; border-style: solid; border-color: #333399; padding: 5px 5px 5px 5px; }
table.list2 { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; border-width: 0px; border-style: solid; border-color: #333399; padding: 0px 0px 0px 0px; }
.list2 th { font-size: 11pt; color: #333399; text-align: left; text-decoration: underline; background-color: #FFFFFF; padding: 2px 2px 2px 2px; }
.list2 td { background-color: #FFFFFF; vertical-align: top; padding: 2px 2px 2px 2px; }
table.list3 { font-family: Arial, Helvetica, Tahoma; font-size: 9pt; width: 100%; border-width: 1px; border-style: solid; border-color: #333399; border-collapse: collapse; padding: 0px 0px 0px 0px; }
.list3 th { color: #000000; background-color: #ECECEC; border-width: 1px 0px 1px 0px; border-style: solid; border-color: #333399; padding: 5px 5px 5px 5px; }
.list3 td { background-color: #F9F7F7; vertical-align: top; border-style: solid; border-color: #333399; border-width: 1px 0px 1px 0px; padding: 5px 5px 5px 5px; }
td.logo { width: 10%; }
.border { border-width: 0px; border-style: solid; border-color: #333399; padding: 2px 2px 2px 2px; }
.center { text-align: center; }
.right { text-align: right; }
.nowrap { white-space: nowrap; }
.title { font-size: 16pt; color: #333399; font-weight: bold; text-align: center; }
.date { font-size: 10pt; color: #333399; font-weight: bold; text-align: right; }
.header { font-size: 11pt; color: #000000; text-align: center; }
.footer { font-size: 9pt; color: #999999; text-align: left; }
.heading1 { font-size: 11pt; color: #000000; font-weight: bold; background-color: #F6E78C; }
.heading2 { font-size: 11pt; color: #333399; font-weight: bold; background-color: #F6E78C; }
.heading3 { font-size: 11pt; color: #000000; font-weight: bold; background-color: #E6E6CB; }
.heading4 { font-size: 11pt; color: #333399; font-weight: bold; background-color: #E6E6CB; }
.heading5 { font-size: 11pt; color: #000000; font-weight: bold; background-color: #CFCF9D; }
.heading6 { font-size: 11pt; color: #333399; font-weight: bold; background-color: #CFCF9D; }
.heading7 { font-size: 15pt; color: #000000; font-weight: bold; background-color: #CFCF9D; }
.heading8 { font-size: 10pt; color: #000000; font-weight: bold; text-align: center; background-color: #F5EFCA; }
.heading9 { font-size: 10pt; color: #000000; font-weight: bold; background-color: #F6E78C; }
.grouping1 { font-size: 10pt; color: #333399; font-weight: bold; background-color: #CFCF9D; }
.grouping2 { font-size: 10pt; color: #000000; font-weight: bold; background-color: #CFCF9D; }
.grouping3 { font-size: 9pt; color: #333399; font-weight: bold; background-color: #E6E6CB; }
.odd_row { background-color: #F8F3F7; }
.even_row { background-color: #FFFBFF; }
.level1 { background-color: #FFEFF7; padding: 2px 2px 2px 2px; }
.level2 { background-color: #F7E7EF; padding: 2px 2px 2px 2px; }
.level2_indent { background-color: #F7E7EF; padding: 2px 2px 2px 12px; }
.level3 { background-color: #EFDFE7; padding: 2px 2px 2px 2px; }
.level3_indent { background-color: #EFDFE7; padding: 2px 2px 2px 22px; }
.level4 { background-color: #E7D7DF; padding: 2px 2px 2px 2px; }
.level4_indent { background-color: #E7D7DF; padding: 2px 2px 2px 32px; }
.level5 { background-color: #DFCFD7; padding: 2px 2px 2px 2px; }
.level5_indent { background-color: #DFCFD7; padding: 2px 2px 2px 42px; }
.level6 { background-color: #D1BFC8; padding: 2px 2px 2px 2px; }
.level6_indent { background-color: #D1BFC8; padding: 2px 2px 2px 52px; }
.level7 { background-color: #C2B0B9; padding: 2px 2px 2px 2px; }
.level7_indent { background-color: #C2B0B9; padding: 2px 2px 2px 62px; }
.level8 { background-color: #B0A0A8; padding: 2px 2px 2px 2px; }
.level8_indent { background-color: #B0A0A8; padding: 2px 2px 2px 72px; }
.indent_transparent { padding: 0px 0px 0px 12px; }
.context_backward_level4_indent { background-color: #E7D7DF; padding: 2px 2px 2px 2px; }
.context_backward_level3_indent { background-color: #EFDFE7; padding: 2px 2px 2px 12px; }
.context_backward_level2_indent { background-color: #F7E7EF; padding: 2px 2px 2px 22px; }
.context_backward_level1_indent { background-color: #FFEFF7; padding: 2px 2px 2px 32px; }
.context { color: #333399; font-weight: bold; background-color: #FFFFFF; border-style: solid; border-color: #000000; border-width: 1px; padding: 2px 2px 2px 2px; }
.context_indent { color: #333399; font-weight: bold; background-color: #FFFFFF; border-style: solid; border-color: #000000; border-width: 1px; padding: 2px 2px 2px 42px; }
.context_forward_level1_indent { background-color: #FFEFF7; padding: 2px 2px 2px 52px; }
.context_forward_level2_indent { background-color: #F7E7EF; padding: 2px 2px 2px 62px; }
.context_forward_level3_indent { background-color: #EFDFE7; padding: 2px 2px 2px 72px; }
.context_forward_level4_indent { background-color: #E7D7DF; padding: 2px 2px 2px 82px; }
.document_level1 { background-color: #FFFFFF; padding: 2px 2px 2px 2px; }
.document_level2 { background-color: #FFFFFF; padding: 2px 2px 2px 12px; }
.document_level3 { background-color: #FFFFFF; padding: 2px 2px 2px 22px; }
.document_level4 { background-color: #FFFFFF; padding: 2px 2px 2px 32px; }
.underline { text-decoration: underline; }
.bold { color: #000000; font-weight: bold; }
.bold_large { font-size: 12pt; color: #000000; font-weight: bold; }
.bold_very_large { font-size: 14pt; color: #000000; font-weight: bold; }
.bold_italic { color: #000000; font-weight: bold; font-style: italic; }
.bold_underline { color: #000000; font-weight: bold; text-decoration: underline; }
.bold_color { color: #333399; font-weight: bold; }
.bold_color_large { font-size: 12pt; color: #333399; font-weight: bold; }
.bold_color_italic { color: #333399; font-weight: bold; font-style: italic; }
.bold_color_underline { color: #333399; font-weight: bold; text-decoration: underline; }
.bold_color_underline_large { font-size: 11pt; color: #333399; font-weight: bold; text-decoration: underline; }
.hr_default { height:1px; width:100%; color: #000000; background:#000000; }
.calendar_no_date_cell { background-color: #F3F3F3; }
</style>

	<script type="text/javascript">
		var line_count=0;
		
		function writeEvenOddTRTag() {
			line_count++; 
			if (line_count%2 == 0)
				document.write("<tr class='even_row'>");
			else
				document.write("<tr class='odd_row'>");
		}
	</script>
</head>



<body>
<table class="heading">
<tbody><tr>
	<td></td>
	<td class="title_white" width="100%" align="right">Test Execution Summary</td>
	<td>&nbsp;</td>
</tr>
</tbody></table>
<table class="white_bg">
    <tbody><tr><td></td></tr>
</tbody></table>
<table class="heading" width="100%">
    <tbody><tr><td></td></tr>

</tbody></table>
<p class="header"></p>
<p class="date">Sep 22, 2016</p>

<table class="detailcols fullWidth">
<!-- block ID=4501-->

<!-- Display issue heading -->
<tbody><tr><th style="text-align: left">HS_AppMon - Item 4501 </th></tr>
<!-- Display issue field names and values -->

<tr><td><b>TEST_Test_Name:</b> HS_AppMon</td></tr>

<tr><td><b>TEST_Description:</b> <!-- MKS HTML -->The purpose of this 
test is to verify the Health and Safety (HS) Application Monitoring 
commands function properly. Invalid commands as well as anomalies will 
be tested &nbsp;to see if the HS application handles these 
appropriately.</td></tr>

<tr><td><b>TEST_Current_Build:</b> 2.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Assigned_To:</b> Walt Moleski (wmoleski)</td></tr>

<tr><td><b>TEST_Execution_Testbed:</b> cFE 6.5.0.0; OSAL 4.2; PSP 1.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Checksum:</b> &nbsp;</td></tr>

<tr><td><b>TEST_Execution_Completion_Date:</b> Sep 16, 2016</td></tr>

<tr><td><b>TEST_Execution_Time:</b> 1257.42 seconds or 20.957 minutes</td></tr>

<tr><td><b>TEST_Execution_Comments:</b> <!-- MKS HTML -->All requirements passed.</td></tr>

<tr><td><b>TEST_Comments:</b> &nbsp;</td></tr>

<!-- Relationships info -->
<!-- Display relationship heading -->
<tr><td>DCRs Submitted / Tested and Requirements Validated</td></tr>


<tr><td class="detailheading" style="text-align: left">Links_To_TEST_from_DCRs_Backward,ALM_Validates:</td></tr>
<tr>
    <td>
        <table class="detailcols fullWidth">
        
        <tbody><tr>
            
            <th>ReqID</th>
            
            <th>Text</th>
            
            <th>Build Test Method</th>
            
            <th>REQ_Build_Sys_Test_Results</th>
            
            <th>REQ_Build_Sys_Test_Comments</th>
            
            <th>DCR_Title</th>
            
            <th>DCR_TEST_Outcome</th>
            
        </tr>
        <!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS1002</td>
            
            <td><!-- MKS HTML -->For all HS commands, if the length 
contained in the message header is not equal to the expected length, HS 
shall reject the command and issue an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS1003</td>
            
            <td><!-- MKS HTML -->If HS accepts any command as valid, HS 
shall execute the command, increment the HS Valid Command Counter and 
issue an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS1004</td>
            
            <td><!-- MKS HTML -->If HS rejects any command, HS shall 
abort the command execution, increment the HS Command Rejected Counter 
and issue an error event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS2000</td>
            
            <td><!-- MKS HTML -->The HS Application shall verify that each application defined in the Critical Application Table is executing.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS2000.1</td>
            
            <td><!-- MKS HTML --><p>If the entry indicates that the 
application is a cFE Core Application and it has not executed for the 
corresponding table-defined number of HS execution cycles, HS shall 
perform one of the table-defined actions</p><p>a) cFE Processor Reset</p><p>b) Send an Event message</p><p>c) Send a Software Bus Message</p><p>d) Perform No Action &nbsp;</p></td>
            
            <td>Analysis, Demonstration</td>
            
            <td>Pass</td>
            
            <td><!-- MKS HTML -->The cFE Processor Reset action was 
verified by analysis. The Event Message and Software Bus Message actions
 were verified by Demonstration. Step 3.2 of the appmon test procedure 
is where the Processor Reset occurs. The UART shows Event ID 42 for 
CFE_TBL was generated prior to the first reset.</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS2000.1.1</td>
            
            <td><!-- MKS HTML --><p>If the action is to perform a cFE 
Processor Reset and the Number of cFE Processor Resets is less than the 
&lt;PLATFORM_DEFINED&gt; Max Number of cFE Processor Resets , HS shall</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Increment the Number of cFE Processor Resets</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Watchdog servicing flag to False</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Command the cFE Processor Reset.</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS2000.1.2</td>
            
            <td><!-- MKS HTML -->If the action is to perform a cFE 
Processor Reset and the Number of cFE Processor Resets is 
greater-than-or-equal-to the &lt;PLATFORM_DEFINED&gt; Max Number of cFE 
Processor Resets , HS shall a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Send 
an event message</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS2000.2</td>
            
            <td><!-- MKS HTML -->If the entry indicates that the 
application is not a cFE Core Application and it has not executed for 
the corresponding table-defined number of HS execution cycles, HS shall 
execute one of the table-defined actions: a) Restart the Application 
(that failed to check-in) b) cFE Processor Reset c) Send an Event 
Message d) Send a Software Bus Message e) &nbsp;Perform No Action</td>
            
            <td>Analysis, Demonstration</td>
            
            <td>Pass</td>
            
            <td><!-- MKS HTML -->The cFE Processor Reset action was 
verified by analysis. The Application Restart, Event Message and 
Software Bus Message actions were verified by Demonstration. Step 4.8 of
 the appmon test procedure is where the Processor Reset occurs. The UART
 shows Event ID 42 for LC was generated prior to the second reset.</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS2000.2.1</td>
            
            <td><!-- MKS HTML -->If the action is to perform a cFE 
Processor Reset and the Number of cFE Processor Resets is less than the 
&lt;PLATFORM_DEFINED&gt; Max Number of cFE Processor Resets , HS shall<br>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Increment the Number of cFE Processor Resets<br>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Watchdog servicing flag to False<br>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Command the cFE Processor Reset.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS2000.2.2</td>
            
            <td><!-- MKS HTML -->If the action is to perform a cFE 
Processor Reset and the Number of cFE Processor Resets is 
greater-than-or-equal-to the &lt;PLATFORM_DEFINED&gt; Max Number of cFE 
Processor Resets , HS shall a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Send 
an event message</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS2000.2.3</td>
            
            <td><!-- MKS HTML -->If the action is to perform an Application Restart, HS shall disable the entry in the Critical Application Table.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS2000.3</td>
            
            <td><!-- MKS HTML -->If the entry in the table references an unresolvable application (i.e. not registered with cFE), HS shall issue an event message</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS2001</td>
            
            <td><!-- MKS HTML --><p>Upon receipt of an Enable Critical Application Monitoring Command, HS shall</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Enable all entries in the Critical Application Table</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execute the Critical Application Table.</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS2002</td>
            
            <td><!-- MKS HTML -->Upon receipt of a Disable Critical Application Monitoring Command, HS shall stop processing the Critical Application Table.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS2003</td>
            
            <td><!-- MKS HTML -->HS shall support up to &lt;PLATFORM_DEFINED&gt; critical applications.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS2004</td>
            
            <td><!-- MKS HTML -->Upon receipt of a Critical Application 
Table update indication, HS shall validate the Critical Application 
Table by validating the action</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS2004.1</td>
            
            <td><!-- MKS HTML -->If the Critical Application Table fails validation, HS shall issue an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS7001</td>
            
            <td><!-- MKS HTML -->Upon receipt of a Set Max Processor 
Resets Command, HS shall set the Maximum number of cFE Processor Resets 
commanded by HS to the Command-specified value.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS7100</td>
            
            <td><!-- MKS HTML --><p>HS shall generate a housekeeping message containing the following:</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status &nbsp;(enable/disable)</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per table entry (enable/disable)</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of CFE Processor resets (commanded by HS)</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maximum number of CFE Processor resets</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Event Monitoring status (enabled/disabled)</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Count of Monitored Event Messages</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Aliveness Indicator (enabled/disabled)</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execution Counter, for each table entry</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table.</p><p>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->
<!-- block ID=4501-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS8000</td>
            
            <td><!-- MKS HTML --><p>Upon cFE Power On Reset, &nbsp;HS shall initialize the following data to Zero (or the value specified for the item below) :</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Applications to &lt;PLATFORM_DEFINED&gt;</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per Application Enabled</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Events to &lt;PLATFORM_DEFINED&gt;</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CPU Aliveness Indicator to &lt;PLATFORM_DEFINED&gt;</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Watchdog Timer Flag set to TRUE</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Watchdog Timer to &lt;PLATFORM_DEFINED&gt; value</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Maximum number of CFE Processor resets to &lt;PLATFORM_DEFINED&gt; value</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of cFE Processor Resets (commanded by HS)</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table<br>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled to &lt;PLATFORM_DEFINED</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4501-->

        </tbody></table>
    </td>
</tr>

<tr><td><hr class="hr_default"></td></tr>
<tr><td>&nbsp;</td></tr>
<script type="text/javascript"> line_count=0; </script>
<!-- blockend ID=4501-->
<!-- block ID=4659-->

<!-- Display issue heading -->
<tr><th style="text-align: left">HS_CPUHog - Item 4659 </th></tr>
<!-- Display issue field names and values -->

<tr><td><b>TEST_Test_Name:</b> HS_CPUHog</td></tr>

<tr><td><b>TEST_Description:</b> <!-- MKS HTML -->The purpose of this 
test is to verify the Health and Safety (HS) application performs CPU 
Utilization as stated by the requirements.</td></tr>

<tr><td><b>TEST_Current_Build:</b> 2.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Assigned_To:</b> Walt Moleski (wmoleski)</td></tr>

<tr><td><b>TEST_Execution_Testbed:</b> cFE 6.5.0.0; OSAL 4.2; PSP 1.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Checksum:</b> &nbsp;</td></tr>

<tr><td><b>TEST_Execution_Completion_Date:</b> Sep 22, 2016</td></tr>

<tr><td><b>TEST_Execution_Time:</b> 317.062 seconds or 5.28437 minutes</td></tr>

<tr><td><b>TEST_Execution_Comments:</b> <!-- MKS HTML -->All requirements passed</td></tr>

<tr><td><b>TEST_Comments:</b> &nbsp;</td></tr>

<!-- Relationships info -->
<!-- Display relationship heading -->
<tr><td>DCRs Submitted / Tested and Requirements Validated</td></tr>


<tr><td class="detailheading" style="text-align: left">Links_To_TEST_from_DCRs_Backward,ALM_Validates:</td></tr>
<tr>
    <td>
        <table class="detailcols fullWidth">
        
        <tbody><tr>
            
            <th>ReqID</th>
            
            <th>Text</th>
            
            <th>Build Test Method</th>
            
            <th>REQ_Build_Sys_Test_Results</th>
            
            <th>REQ_Build_Sys_Test_Comments</th>
            
            <th>DCR_Title</th>
            
            <th>DCR_TEST_Outcome</th>
            
        </tr>
        <!-- block ID=4659-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS1003</td>
            
            <td><!-- MKS HTML -->If HS accepts any command as valid, HS 
shall execute the command, increment the HS Valid Command Counter and 
issue an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4659-->
<!-- block ID=4659-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS6008</td>
            
            <td><!-- MKS HTML -->HS shall report peak CPU utilization 
during an interval of &lt;PLATFORM_DEFINED&gt; HS execution cycles over 
the last &lt;PLATFORM_DEFINED&gt; intervals.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4659-->
<!-- block ID=4659-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS6009</td>
            
            <td><!-- MKS HTML -->HS shall report average CPU utilization
 over the last &lt;PLATFORM_DEFINED&gt; intervals of 
&lt;PLATFORM_DEFINED&gt; HS execution cycles each.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4659-->
<!-- block ID=4659-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS6010</td>
            
            <td><!-- MKS HTML -->If the CPU utilization exceeds 
&lt;PLATFORM_DEFINED&gt; % for &lt;PLATFORM_DEFINED&gt; intervals and 
CPU Utilization Monitoring is enabled then HS shall issue an event 
message</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4659-->
<!-- block ID=4659-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS6011</td>
            
            <td><!-- MKS HTML -->Upon receipt of an Enable CPU utilization monitoring, HS shall begin monitoring CPU utilization.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4659-->
<!-- block ID=4659-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS7100</td>
            
            <td><!-- MKS HTML --><p>HS shall generate a housekeeping message containing the following:</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status &nbsp;(enable/disable)</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per table entry (enable/disable)</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of CFE Processor resets (commanded by HS)</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maximum number of CFE Processor resets</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Event Monitoring status (enabled/disabled)</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Count of Monitored Event Messages</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Aliveness Indicator (enabled/disabled)</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execution Counter, for each table entry</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table.</p><p>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4659-->
<!-- block ID=4659-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS8000</td>
            
            <td><!-- MKS HTML --><p>Upon cFE Power On Reset, &nbsp;HS shall initialize the following data to Zero (or the value specified for the item below) :</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Applications to &lt;PLATFORM_DEFINED&gt;</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per Application Enabled</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Events to &lt;PLATFORM_DEFINED&gt;</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CPU Aliveness Indicator to &lt;PLATFORM_DEFINED&gt;</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Watchdog Timer Flag set to TRUE</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Watchdog Timer to &lt;PLATFORM_DEFINED&gt; value</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Maximum number of CFE Processor resets to &lt;PLATFORM_DEFINED&gt; value</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of cFE Processor Resets (commanded by HS)</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table<br>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled to &lt;PLATFORM_DEFINED</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4659-->

        </tbody></table>
    </td>
</tr>

<tr><td><hr class="hr_default"></td></tr>
<tr><td>&nbsp;</td></tr>
<script type="text/javascript"> line_count=0; </script>
<!-- blockend ID=4659-->
<!-- block ID=4502-->

<!-- Display issue heading -->
<tr><th style="text-align: left">HS_EventMon - Item 4502 </th></tr>
<!-- Display issue field names and values -->

<tr><td><b>TEST_Test_Name:</b> HS_EventMon</td></tr>

<tr><td><b>TEST_Description:</b> <!-- MKS HTML -->The purpose of this 
test is to verify the Health and Safety (HS) Event Monitoring commands 
function properly. Invalid commands as well as anomalies will be tested 
&nbsp;to see if the HS application handles these appropriately.</td></tr>

<tr><td><b>TEST_Current_Build:</b> 2.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Assigned_To:</b> Walt Moleski (wmoleski)</td></tr>

<tr><td><b>TEST_Execution_Testbed:</b> cFE 6.5.0.0; OSAL 4.2; PSP 1.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Checksum:</b> &nbsp;</td></tr>

<tr><td><b>TEST_Execution_Completion_Date:</b> Sep 19, 2016</td></tr>

<tr><td><b>TEST_Execution_Time:</b> 1019.29 seconds or 16.9882 minutes</td></tr>

<tr><td><b>TEST_Execution_Comments:</b> <!-- MKS HTML -->All requirements passed.</td></tr>

<tr><td><b>TEST_Comments:</b> &nbsp;</td></tr>

<!-- Relationships info -->
<!-- Display relationship heading -->
<tr><td>DCRs Submitted / Tested and Requirements Validated</td></tr>


<tr><td class="detailheading" style="text-align: left">Links_To_TEST_from_DCRs_Backward,ALM_Validates:</td></tr>
<tr>
    <td>
        <table class="detailcols fullWidth">
        
        <tbody><tr>
            
            <th>ReqID</th>
            
            <th>Text</th>
            
            <th>Build Test Method</th>
            
            <th>REQ_Build_Sys_Test_Results</th>
            
            <th>REQ_Build_Sys_Test_Comments</th>
            
            <th>DCR_Title</th>
            
            <th>DCR_TEST_Outcome</th>
            
        </tr>
        <!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS1000</td>
            
            <td><!-- MKS HTML -->Upon receipt of a No-Op command, HS shall increment the HS Valid Command Counter and generate an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS1002</td>
            
            <td><!-- MKS HTML -->For all HS commands, if the length 
contained in the message header is not equal to the expected length, HS 
shall reject the command and issue an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS1003</td>
            
            <td><!-- MKS HTML -->If HS accepts any command as valid, HS 
shall execute the command, increment the HS Valid Command Counter and 
issue an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS1004</td>
            
            <td><!-- MKS HTML -->If HS rejects any command, HS shall 
abort the command execution, increment the HS Command Rejected Counter 
and issue an error event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS5000</td>
            
            <td><!-- MKS HTML -->The HS Application shall compare each 
received event message with the events defined in the Critical Event 
Table for up to &lt;PLATFORM_DEFINED&gt; critical events.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS5000.1</td>
            
            <td><!-- MKS HTML --><p>If the event received is defined in the Critical Event Table, HS shall execute one of the following table-defined actions:</p><p>a) Restart Application that generated the Event</p><p>b) Perform cFE Processor Reset</p><p>c) Delete the Application that generated the Event</p><p>d) Send a Software Bus Message e) Perform No Action</p></td>
            
            <td>Analysis, Demonstration</td>
            
            <td>Pass</td>
            
            <td><!-- MKS HTML -->The cFE Processor Reset action was 
verified by analysis. The Application Restart, Event Message and Sofware
 Bus Message actions were verified by Demonstration. Step 3.8 of the 
eventmon test procedure is where the Processor Reset occurs. The UART 
shows Event ID 45 for HS EID: (23) was generated prior to the first 
reset.</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS5000.1.1</td>
            
            <td><!-- MKS HTML --><p>If the action is to perform a cFE 
Processor Reset and the Number of cFE Processor Resets is less than the 
&lt;PLATFORM_DEFINED&gt; Max Number of cFE Processor Resets , HS shall</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Increment the Number of cFE Processor Resets</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Watchdog servicing flag to False</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Command the cFE Processor Reset.</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS5000.1.2</td>
            
            <td><!-- MKS HTML -->If the action is to perform a cFE 
Processor Reset and the Number of cFE Processor Resets is 
greater-than-or-equal-to the &lt;PLATFORM_DEFINED&gt; Max Number of cFE 
Processor Resets , HS shall send an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS5000.2</td>
            
            <td><!-- MKS HTML -->If the Application defined in the 
Critical Event Counter Table is unknown, HS shall increment Critical 
Event Table Invalid/Unknown Apps counter&nbsp;</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS5001</td>
            
            <td><!-- MKS HTML --><p>Upon receipt of an Enable Critical Event Monitor Command, HS shall</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Enable Critical Event Monitoring to Enabled</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Begin processing the Critical Event Table.</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS5002</td>
            
            <td><!-- MKS HTML --><p>Upon receipt of a Disable Critical Event Monitor Command, HS shall</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Enable Critical Event Monitoring to Disabled</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stop executing the Critical Event Table.</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS5003</td>
            
            <td><!-- MKS HTML -->HS shall support up to &lt;PLATFORM_DEFINED&gt; critical events.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS5004</td>
            
            <td><!-- MKS HTML -->Upon receipt of a Critical Event Table update indication, HS shall validate the Critical Event Table by validating the action</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS5004.1</td>
            
            <td><!-- MKS HTML -->If the Critical Event Table fails validation, HS shall issue an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS7001</td>
            
            <td><!-- MKS HTML -->Upon receipt of a Set Max Processor 
Resets Command, HS shall set the Maximum number of cFE Processor Resets 
commanded by HS to the Command-specified value.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS7100</td>
            
            <td><!-- MKS HTML --><p>HS shall generate a housekeeping message containing the following:</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status &nbsp;(enable/disable)</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per table entry (enable/disable)</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of CFE Processor resets (commanded by HS)</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maximum number of CFE Processor resets</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Event Monitoring status (enabled/disabled)</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Count of Monitored Event Messages</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Aliveness Indicator (enabled/disabled)</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execution Counter, for each table entry</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table.</p><p>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->
<!-- block ID=4502-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS8000</td>
            
            <td><!-- MKS HTML --><p>Upon cFE Power On Reset, &nbsp;HS shall initialize the following data to Zero (or the value specified for the item below) :</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Applications to &lt;PLATFORM_DEFINED&gt;</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per Application Enabled</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Events to &lt;PLATFORM_DEFINED&gt;</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CPU Aliveness Indicator to &lt;PLATFORM_DEFINED&gt;</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Watchdog Timer Flag set to TRUE</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Watchdog Timer to &lt;PLATFORM_DEFINED&gt; value</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Maximum number of CFE Processor resets to &lt;PLATFORM_DEFINED&gt; value</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of cFE Processor Resets (commanded by HS)</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table<br>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled to &lt;PLATFORM_DEFINED</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4502-->

        </tbody></table>
    </td>
</tr>

<tr><td><hr class="hr_default"></td></tr>
<tr><td>&nbsp;</td></tr>
<script type="text/javascript"> line_count=0; </script>
<!-- blockend ID=4502-->
<!-- block ID=4503-->

<!-- Display issue heading -->
<tr><th style="text-align: left">HS_ExeCtr - Item 4503 </th></tr>
<!-- Display issue field names and values -->

<tr><td><b>TEST_Test_Name:</b> HS_ExeCtr</td></tr>

<tr><td><b>TEST_Description:</b> <!-- MKS HTML -->The purpose of this test is to verify the Health and Safety (HS) handles the Execution Counter Management requirements properly.<br><br>NOTE: If the Mission decides not to use Execution Counters, this test can be skipped.</td></tr>

<tr><td><b>TEST_Current_Build:</b> 2.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Assigned_To:</b> Walt Moleski (wmoleski)</td></tr>

<tr><td><b>TEST_Execution_Testbed:</b> cFE 6.5.0.0; OSAL 4.2; PSP 1.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Checksum:</b> &nbsp;</td></tr>

<tr><td><b>TEST_Execution_Completion_Date:</b> Sep 20, 2016</td></tr>

<tr><td><b>TEST_Execution_Time:</b> 639.662 seconds or 19.661 minutes</td></tr>

<tr><td><b>TEST_Execution_Comments:</b> <!-- MKS HTML -->All requirements passed.</td></tr>

<tr><td><b>TEST_Comments:</b> &nbsp;</td></tr>

<!-- Relationships info -->
<!-- Display relationship heading -->
<tr><td>DCRs Submitted / Tested and Requirements Validated</td></tr>


<tr><td class="detailheading" style="text-align: left">Links_To_TEST_from_DCRs_Backward,ALM_Validates:</td></tr>
<tr>
    <td>
        <table class="detailcols fullWidth">
        
        <tbody><tr>
            
            <th>ReqID</th>
            
            <th>Text</th>
            
            <th>Build Test Method</th>
            
            <th>REQ_Build_Sys_Test_Results</th>
            
            <th>REQ_Build_Sys_Test_Comments</th>
            
            <th>DCR_Title</th>
            
            <th>DCR_TEST_Outcome</th>
            
        </tr>
        <!-- block ID=4503-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS3000</td>
            
            <td><!-- MKS HTML -->The HS Application shall maintain the 
Execution Counters defined in the Execution Counter Table for &nbsp;up 
to &lt;PLATFORM_DEFINED&gt; number of Items.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4503-->
<!-- block ID=4503-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS3000.1</td>
            
            <td><!-- MKS HTML --><p>If the Item contained in the Execution Counter Table is unknown, HS shall &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Execution Counter value for that entry to 0x’FFFFFFFF’</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4503-->
<!-- block ID=4503-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS3001</td>
            
            <td><!-- MKS HTML -->Upon receipt of a Execution Counter Table update indication, HS shall validate the Execution Counter Table.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4503-->
<!-- block ID=4503-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS3001.1</td>
            
            <td><!-- MKS HTML -->If the Execution Counter Table fails validation, HS shall issue an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4503-->
<!-- block ID=4503-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS7100</td>
            
            <td><!-- MKS HTML --><p>HS shall generate a housekeeping message containing the following:</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status &nbsp;(enable/disable)</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per table entry (enable/disable)</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of CFE Processor resets (commanded by HS)</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maximum number of CFE Processor resets</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Event Monitoring status (enabled/disabled)</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Count of Monitored Event Messages</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Aliveness Indicator (enabled/disabled)</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execution Counter, for each table entry</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table.</p><p>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4503-->
<!-- block ID=4503-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS8000</td>
            
            <td><!-- MKS HTML --><p>Upon cFE Power On Reset, &nbsp;HS shall initialize the following data to Zero (or the value specified for the item below) :</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Applications to &lt;PLATFORM_DEFINED&gt;</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per Application Enabled</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Events to &lt;PLATFORM_DEFINED&gt;</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CPU Aliveness Indicator to &lt;PLATFORM_DEFINED&gt;</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Watchdog Timer Flag set to TRUE</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Watchdog Timer to &lt;PLATFORM_DEFINED&gt; value</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Maximum number of CFE Processor resets to &lt;PLATFORM_DEFINED&gt; value</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of cFE Processor Resets (commanded by HS)</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table<br>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled to &lt;PLATFORM_DEFINED</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4503-->

        </tbody></table>
    </td>
</tr>

<tr><td><hr class="hr_default"></td></tr>
<tr><td>&nbsp;</td></tr>
<script type="text/javascript"> line_count=0; </script>
<!-- blockend ID=4503-->
<!-- block ID=4500-->

<!-- Display issue heading -->
<tr><th style="text-align: left">HS_GenCmds - Item 4500 </th></tr>
<!-- Display issue field names and values -->

<tr><td><b>TEST_Test_Name:</b> HS_GenCmds</td></tr>

<tr><td><b>TEST_Description:</b> <!-- MKS HTML -->The purpose of this 
test is to verify the Health and Safety (HS) general, CPU aliveness and 
miscellaneous commands function properly. These commands will be tested 
as well as invalid commands to see if the HS application handles these 
appropriately.</td></tr>

<tr><td><b>TEST_Current_Build:</b> 2.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Assigned_To:</b> Walt Moleski (wmoleski)</td></tr>

<tr><td><b>TEST_Execution_Testbed:</b> cFE 6.5.0.0; OSAL 4.2; PSP 1.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Checksum:</b> &nbsp;</td></tr>

<tr><td><b>TEST_Execution_Completion_Date:</b> Sep 20, 2016</td></tr>

<tr><td><b>TEST_Execution_Time:</b> 494.041 seconds or 8.23402 minutes</td></tr>

<tr><td><b>TEST_Execution_Comments:</b> <!-- MKS HTML -->All requirements passed</td></tr>

<tr><td><b>TEST_Comments:</b> &nbsp;</td></tr>

<!-- Relationships info -->
<!-- Display relationship heading -->
<tr><td>DCRs Submitted / Tested and Requirements Validated</td></tr>


<tr><td class="detailheading" style="text-align: left">Links_To_TEST_from_DCRs_Backward,ALM_Validates:</td></tr>
<tr>
    <td>
        <table class="detailcols fullWidth">
        
        <tbody><tr>
            
            <th>ReqID</th>
            
            <th>Text</th>
            
            <th>Build Test Method</th>
            
            <th>REQ_Build_Sys_Test_Results</th>
            
            <th>REQ_Build_Sys_Test_Comments</th>
            
            <th>DCR_Title</th>
            
            <th>DCR_TEST_Outcome</th>
            
        </tr>
        <!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS1000</td>
            
            <td><!-- MKS HTML -->Upon receipt of a No-Op command, HS shall increment the HS Valid Command Counter and generate an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS1001</td>
            
            <td><!-- MKS HTML --><p>Upon receipt of a Reset command, HS shall reset the following housekeeping variables to a value of zero: &nbsp;</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter &nbsp; &nbsp;</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter.</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS1002</td>
            
            <td><!-- MKS HTML -->For all HS commands, if the length 
contained in the message header is not equal to the expected length, HS 
shall reject the command and issue an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS1003</td>
            
            <td><!-- MKS HTML -->If HS accepts any command as valid, HS 
shall execute the command, increment the HS Valid Command Counter and 
issue an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS1004</td>
            
            <td><!-- MKS HTML -->If HS rejects any command, HS shall 
abort the command execution, increment the HS Command Rejected Counter 
and issue an error event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS6005</td>
            
            <td><!-- MKS HTML -->During each HS execution cycle, HS 
shall send a &lt;PLATFORM_DEFINED&gt; character(s) &nbsp;to the UART 
port every &lt;PLATFORM_DEFINED&gt; second(s).</td>
            
            <td>Analysis</td>
            
            <td>Pass</td>
            
            <td><!-- MKS HTML -->The UART contained the expected characters which indicates that the system is running.</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS6006</td>
            
            <td><!-- MKS HTML -->Upon receipt of an Enable CPU Aliveness
 Indicator Command, HS shall begin sending the &lt;PLATFORM_DEFINED&gt; 
heartbeat character(s) to the UART port.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS6007</td>
            
            <td><!-- MKS HTML -->Upon receipt of a Disable Aliveness 
Indicator Command, HS shall stop sending the &lt;PLATFORM_DEFINED&gt; 
heartbeat character(s) to the UART port.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS6011</td>
            
            <td><!-- MKS HTML -->Upon receipt of an Enable CPU utilization monitoring, HS shall begin monitoring CPU utilization.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS6012</td>
            
            <td><!-- MKS HTML -->Upon receipt of an Disable CPU utilization monitoring, HS shall stop monitoring CPU utilization</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS7000</td>
            
            <td><!-- MKS HTML -->Upon receipt of a Reset Processor Resets Command, HS shall set the number of cFE Processor Resets commanded by HS to zero.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS7001</td>
            
            <td><!-- MKS HTML -->Upon receipt of a Set Max Processor 
Resets Command, HS shall set the Maximum number of cFE Processor Resets 
commanded by HS to the Command-specified value.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS7100</td>
            
            <td><!-- MKS HTML --><p>HS shall generate a housekeeping message containing the following:</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status &nbsp;(enable/disable)</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per table entry (enable/disable)</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of CFE Processor resets (commanded by HS)</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maximum number of CFE Processor resets</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Event Monitoring status (enabled/disabled)</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Count of Monitored Event Messages</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Aliveness Indicator (enabled/disabled)</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execution Counter, for each table entry</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table.</p><p>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->
<!-- block ID=4500-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS8000</td>
            
            <td><!-- MKS HTML --><p>Upon cFE Power On Reset, &nbsp;HS shall initialize the following data to Zero (or the value specified for the item below) :</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Applications to &lt;PLATFORM_DEFINED&gt;</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per Application Enabled</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Events to &lt;PLATFORM_DEFINED&gt;</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CPU Aliveness Indicator to &lt;PLATFORM_DEFINED&gt;</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Watchdog Timer Flag set to TRUE</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Watchdog Timer to &lt;PLATFORM_DEFINED&gt; value</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Maximum number of CFE Processor resets to &lt;PLATFORM_DEFINED&gt; value</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of cFE Processor Resets (commanded by HS)</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table<br>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled to &lt;PLATFORM_DEFINED</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4500-->

        </tbody></table>
    </td>
</tr>

<tr><td><hr class="hr_default"></td></tr>
<tr><td>&nbsp;</td></tr>
<script type="text/javascript"> line_count=0; </script>
<!-- blockend ID=4500-->
<!-- block ID=4504-->

<!-- Display issue heading -->
<tr><th style="text-align: left">HS_Reset - Item 4504 </th></tr>
<!-- Display issue field names and values -->

<tr><td><b>TEST_Test_Name:</b> HS_Reset</td></tr>

<tr><td><b>TEST_Description:</b> <!-- MKS HTML -->The purpose of this 
test is to verify the Health and Safety (HS) Application initializes the
 appropriate data items based upon the type of initialization that 
occurs (Application Reset, Processor Reset, or Power-On Reset). This 
test also verifies that the proper notifications occur if any anomalies 
exist with the data items stated in the requirements.</td></tr>

<tr><td><b>TEST_Current_Build:</b> 2.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Assigned_To:</b> Walt Moleski (wmoleski)</td></tr>

<tr><td><b>TEST_Execution_Testbed:</b> cFE 6.5.0.0; OSAL 4.2; PSP 1.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Checksum:</b> &nbsp;</td></tr>

<tr><td><b>TEST_Execution_Completion_Date:</b> Sep 20, 2016</td></tr>

<tr><td><b>TEST_Execution_Time:</b> 2430.95 seconds or 40.5158 minutes</td></tr>

<tr><td><b>TEST_Execution_Comments:</b> <!-- MKS HTML -->All requirements passed.</td></tr>

<tr><td><b>TEST_Comments:</b> &nbsp;</td></tr>

<!-- Relationships info -->
<!-- Display relationship heading -->
<tr><td>DCRs Submitted / Tested and Requirements Validated</td></tr>


<tr><td class="detailheading" style="text-align: left">Links_To_TEST_from_DCRs_Backward,ALM_Validates:</td></tr>
<tr>
    <td>
        <table class="detailcols fullWidth">
        
        <tbody><tr>
            
            <th>ReqID</th>
            
            <th>Text</th>
            
            <th>Build Test Method</th>
            
            <th>REQ_Build_Sys_Test_Results</th>
            
            <th>REQ_Build_Sys_Test_Comments</th>
            
            <th>DCR_Title</th>
            
            <th>DCR_TEST_Outcome</th>
            
        </tr>
        <!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS1003</td>
            
            <td><!-- MKS HTML -->If HS accepts any command as valid, HS 
shall execute the command, increment the HS Valid Command Counter and 
issue an event message.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS7001</td>
            
            <td><!-- MKS HTML -->Upon receipt of a Set Max Processor 
Resets Command, HS shall set the Maximum number of cFE Processor Resets 
commanded by HS to the Command-specified value.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS7100</td>
            
            <td><!-- MKS HTML --><p>HS shall generate a housekeeping message containing the following:</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status &nbsp;(enable/disable)</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per table entry (enable/disable)</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of CFE Processor resets (commanded by HS)</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maximum number of CFE Processor resets</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Event Monitoring status (enabled/disabled)</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Count of Monitored Event Messages</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Aliveness Indicator (enabled/disabled)</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execution Counter, for each table entry</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table.</p><p>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS8000</td>
            
            <td><!-- MKS HTML --><p>Upon cFE Power On Reset, &nbsp;HS shall initialize the following data to Zero (or the value specified for the item below) :</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Applications to &lt;PLATFORM_DEFINED&gt;</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per Application Enabled</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Events to &lt;PLATFORM_DEFINED&gt;</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CPU Aliveness Indicator to &lt;PLATFORM_DEFINED&gt;</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Watchdog Timer Flag set to TRUE</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Watchdog Timer to &lt;PLATFORM_DEFINED&gt; value</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Maximum number of CFE Processor resets to &lt;PLATFORM_DEFINED&gt; value</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of cFE Processor Resets (commanded by HS)</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table<br>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled to &lt;PLATFORM_DEFINED</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS8001</td>
            
            <td><!-- MKS HTML --><p>Upon cFE Processor Reset or HS Application Restart, &nbsp;HS preserves the following:</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of cFE Processor Resets (commanded by HS)</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maximum number of cFE Processor Resets.</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS8002</td>
            
            <td><!-- MKS HTML -->Upon any Initialization, HS shall subscribe to all event messages.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS8003</td>
            
            <td><!-- MKS HTML -->Upon any Initialization, HS shall load the Critical Application Table.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS8003.1</td>
            
            <td><!-- MKS HTML -->If the Critical Application Table fails validation, HS shall issue an event message and disable Critical Application Monitoring.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS8004</td>
            
            <td><!-- MKS HTML -->Upon any Initialization, HS shall load the Critical Event Table.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS8004.1</td>
            
            <td><!-- MKS HTML -->If the Critical Event Table fails validation, HS shall issue an event message and disable Critical Event Monitoring.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS8005</td>
            
            <td><!-- MKS HTML -->Upon any Initialization, HS shall load the Execution Counter Table.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS8005.1</td>
            
            <td><!-- MKS HTML --><p>If the Execution Counter Table fails validation, HS shall:</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Issue an event message</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Report 0x‘FFFFFFFF’ for all &lt;PLATFORM_DEFINED&gt; items in the table</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS8006</td>
            
            <td><!-- MKS HTML -->Upon any initialization, HS shall wait until the cFE startup synch has been received indicating all Applications have started.</td>
            
            <td>Analysis</td>
            
            <td>Pass</td>
            
            <td><!-- MKS HTML -->This requirement was verified by adding
 the HS application to the cFE startup script and verifying that the CPU
 Aliveness character printed out after all the applications in the 
startup script were executing. The UART log of the HS_Reset test 
verifies this.</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->
<!-- block ID=4504-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS8006.1</td>
            
            <td><!-- MKS HTML -->If the startup-synch is not received in &lt;PLATFORM_DEFINED&gt; seconds, HS shall begin processing.</td>
            
            <td>Analysis</td>
            
            <td>Pass</td>
            
            <td><!-- MKS HTML -->This requirement was verified by adding
 the HS and TST_HS applications to the cFE startup script and having the
 TST_HS application delay for more than the startup-synch timout value 
used by HS. If the HS Cpu Aliveness indication character appears in the 
UART before the TST_HS application Housekeeping request events, then HS 
started processing before receiving the startup-synch. The UART log of 
the HS_Reset test verifies this.</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4504-->

        </tbody></table>
    </td>
</tr>

<tr><td><hr class="hr_default"></td></tr>
<tr><td>&nbsp;</td></tr>
<script type="text/javascript"> line_count=0; </script>
<!-- blockend ID=4504-->
<!-- block ID=4506-->

<!-- Display issue heading -->
<tr><th style="text-align: left">HS_Stress - Item 4506 </th></tr>
<!-- Display issue field names and values -->

<tr><td><b>TEST_Test_Name:</b> HS_Stress</td></tr>

<tr><td><b>TEST_Description:</b> <!-- MKS HTML -->This test verifies 
that the CFS Health and Safety (HS) Application handles the maximum 
&lt;PLATFORM_DEFINE&gt; entries in the Critical Application, Event and 
Execution Counter Tables.</td></tr>

<tr><td><b>TEST_Current_Build:</b> 2.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Assigned_To:</b> Walt Moleski (wmoleski)</td></tr>

<tr><td><b>TEST_Execution_Testbed:</b> cFE 6.5.0.0; OSAL 4.2; PSP 1.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Checksum:</b> 0</td></tr>

<tr><td><b>TEST_Execution_Completion_Date:</b> Sep 20, 2016</td></tr>

<tr><td><b>TEST_Execution_Time:</b> 575.66 seconds or 9.59433 minutes</td></tr>

<tr><td><b>TEST_Execution_Comments:</b> <!-- MKS HTML -->All requirements passed.</td></tr>

<tr><td><b>TEST_Comments:</b> &nbsp;</td></tr>

<!-- Relationships info -->
<!-- Display relationship heading -->
<tr><td>DCRs Submitted / Tested and Requirements Validated</td></tr>


<tr><td class="detailheading" style="text-align: left">Links_To_TEST_from_DCRs_Backward,ALM_Validates:</td></tr>
<tr>
    <td>
        <table class="detailcols fullWidth">
        
        <tbody><tr>
            
            <th>ReqID</th>
            
            <th>Text</th>
            
            <th>Build Test Method</th>
            
            <th>REQ_Build_Sys_Test_Results</th>
            
            <th>REQ_Build_Sys_Test_Comments</th>
            
            <th>DCR_Title</th>
            
            <th>DCR_TEST_Outcome</th>
            
        </tr>
        <!-- block ID=4506-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS2000.2.3</td>
            
            <td><!-- MKS HTML -->If the action is to perform an Application Restart, HS shall disable the entry in the Critical Application Table.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4506-->
<!-- block ID=4506-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS2003</td>
            
            <td><!-- MKS HTML -->HS shall support up to &lt;PLATFORM_DEFINED&gt; critical applications.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4506-->
<!-- block ID=4506-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS3000</td>
            
            <td><!-- MKS HTML -->The HS Application shall maintain the 
Execution Counters defined in the Execution Counter Table for &nbsp;up 
to &lt;PLATFORM_DEFINED&gt; number of Items.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4506-->
<!-- block ID=4506-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS5003</td>
            
            <td><!-- MKS HTML -->HS shall support up to &lt;PLATFORM_DEFINED&gt; critical events.</td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4506-->
<!-- block ID=4506-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS7100</td>
            
            <td><!-- MKS HTML --><p>HS shall generate a housekeeping message containing the following:</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status &nbsp;(enable/disable)</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per table entry (enable/disable)</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of CFE Processor resets (commanded by HS)</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maximum number of CFE Processor resets</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Event Monitoring status (enabled/disabled)</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Count of Monitored Event Messages</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Aliveness Indicator (enabled/disabled)</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execution Counter, for each table entry</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table.</p><p>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4506-->
<!-- block ID=4506-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS8000</td>
            
            <td><!-- MKS HTML --><p>Upon cFE Power On Reset, &nbsp;HS shall initialize the following data to Zero (or the value specified for the item below) :</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Applications to &lt;PLATFORM_DEFINED&gt;</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per Application Enabled</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Events to &lt;PLATFORM_DEFINED&gt;</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CPU Aliveness Indicator to &lt;PLATFORM_DEFINED&gt;</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Watchdog Timer Flag set to TRUE</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Watchdog Timer to &lt;PLATFORM_DEFINED&gt; value</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Maximum number of CFE Processor resets to &lt;PLATFORM_DEFINED&gt; value</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of cFE Processor Resets (commanded by HS)</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table<br>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled to &lt;PLATFORM_DEFINED</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4506-->

        </tbody></table>
    </td>
</tr>

<tr><td><hr class="hr_default"></td></tr>
<tr><td>&nbsp;</td></tr>
<script type="text/javascript"> line_count=0; </script>
<!-- blockend ID=4506-->
<!-- block ID=4505-->

<!-- Display issue heading -->
<tr><th style="text-align: left">HS_WatchDog - Item 4505 </th></tr>
<!-- Display issue field names and values -->

<tr><td><b>TEST_Test_Name:</b> HS_WatchDog</td></tr>

<tr><td><b>TEST_Description:</b> <!-- MKS HTML -->The purpose of this test is to verify the Health and Safety (HS) handles the Watchdog Management requirements properly.</td></tr>

<tr><td><b>TEST_Current_Build:</b> 2.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Assigned_To:</b> Walt Moleski (wmoleski)</td></tr>

<tr><td><b>TEST_Execution_Testbed:</b> cFE 6.5.0.0; OSAL 4.2; PSP 1.3.0.0</td></tr>

<tr><td><b>TEST_Execution_Checksum:</b> &nbsp;</td></tr>

<tr><td><b>TEST_Execution_Completion_Date:</b> Sep 22, 2016</td></tr>

<tr><td><b>TEST_Execution_Time:</b> 616.155 seconds or 10.2692 minutes</td></tr>

<tr><td><b>TEST_Execution_Comments:</b> <!-- MKS HTML -->All requirements passed.</td></tr>

<tr><td><b>TEST_Comments:</b> &nbsp;</td></tr>

<!-- Relationships info -->
<!-- Display relationship heading -->
<tr><td>DCRs Submitted / Tested and Requirements Validated</td></tr>


<tr><td class="detailheading" style="text-align: left">Links_To_TEST_from_DCRs_Backward,ALM_Validates:</td></tr>
<tr>
    <td>
        <table class="detailcols fullWidth">
        
        <tbody><tr>
            
            <th>ReqID</th>
            
            <th>Text</th>
            
            <th>Build Test Method</th>
            
            <th>REQ_Build_Sys_Test_Results</th>
            
            <th>REQ_Build_Sys_Test_Comments</th>
            
            <th>DCR_Title</th>
            
            <th>DCR_TEST_Outcome</th>
            
        </tr>
        <!-- block ID=4505-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS4000</td>
            
            <td><!-- MKS HTML -->During each HS execution cycle, HS shall check the status of the Update Watchdog Timer Flag.</td>
            
            <td>Analysis</td>
            
            <td>Pass</td>
            
            <td><!-- MKS HTML -->This requirement was verified because 
it's sub-requirements were verified. Since requirements 4000.1 and 
4000.2 passed, it can be assumed that the WatchDog Timer Flag's status 
is checked each cycle.</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4505-->
<!-- block ID=4505-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS4000.1</td>
            
            <td><!-- MKS HTML -->If it is set to TRUE, HS shall service the Watchdog Timer.</td>
            
            <td>Analysis</td>
            
            <td>Pass</td>
            
            <td><!-- MKS HTML -->This requirement was verified by 
stopping the HS application after startup and waiting for the WatchDog 
timer to expire which resulted in a WatchDog Reset of the processor used
 for this test. The UART log of the HS_WatchDog test verifies this by 
indicating the WatchDog Reset as the type when the processor restarts.</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4505-->
<!-- block ID=4505-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS4000.2</td>
            
            <td><!-- MKS HTML -->If it is set to FALSE, HS shall not service the Watchdog Timer.</td>
            
            <td>Analysis</td>
            
            <td>Pass</td>
            
            <td><!-- MKS HTML -->This requirement was verified by 
utilizing the TST_HS application to set the HS WatchDog Timer Flag to 
false and stopping the HS application after startup. The expected result
 was that the processor used for this test continues running after the 
WatchDog timer expires. A TST_HS NOOP command was issued and executed to
 verify that the processor did not reset. The UART log of the 
HS_WatchDog test verifies this.</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4505-->
<!-- block ID=4505-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="even_row">
            
            <td>HS7100</td>
            
            <td><!-- MKS HTML --><p>HS shall generate a housekeeping message containing the following:</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status &nbsp;(enable/disable)</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per table entry (enable/disable)</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of CFE Processor resets (commanded by HS)</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maximum number of CFE Processor resets</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Event Monitoring status (enabled/disabled)</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Count of Monitored Event Messages</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Aliveness Indicator (enabled/disabled)</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execution Counter, for each table entry</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table.</p><p>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4505-->
<!-- block ID=4505-->

		
        
        <!-- Display relationship issue field headings -->
        
        
        <!-- Display relationship issue field values -->
		<script type="text/javascript"> writeEvenOddTRTag(); </script><tr class="odd_row">
            
            <td>HS8000</td>
            
            <td><!-- MKS HTML --><p>Upon cFE Power On Reset, &nbsp;HS shall initialize the following data to Zero (or the value specified for the item below) :</p><p>a)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Valid Ground Command Counter</p><p>b)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ground Command Rejected Counter</p><p>c)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Applications to &lt;PLATFORM_DEFINED&gt;</p><p>d)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Critical Application Monitoring status per Application Enabled</p><p>e)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor Critical Events to &lt;PLATFORM_DEFINED&gt;</p><p>f)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CPU Aliveness Indicator to &lt;PLATFORM_DEFINED&gt;</p><p>g)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Watchdog Timer Flag set to TRUE</p><p>h)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set the Watchdog Timer to &lt;PLATFORM_DEFINED&gt; value</p><p>i)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Maximum number of CFE Processor resets to &lt;PLATFORM_DEFINED&gt; value</p><p>j)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of cFE Processor Resets (commanded by HS)</p><p>k)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Number of Invalid/Unknown Apps contained in Critical Event Table<br>l) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Peak CPU Utilization</p><p>m) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Average CPU utilization</p><p>n) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CPU Utilization Monitoring Enabled/Disabled to &lt;PLATFORM_DEFINED</p></td>
            
            <td>Demonstration</td>
            
            <td>Pass</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
            <td>&nbsp;</td>
            
        </tr>
        <!-- blockend ID=4505-->

        </tbody></table>
    </td>
</tr>

<tr><td><hr class="hr_default"></td></tr>
<tr><td>&nbsp;</td></tr>
<script type="text/javascript"> line_count=0; </script>
<!-- blockend ID=4505-->

</tbody></table>
<center class="footer"></center>

</body></html>