        -:    0:Source:../src/lc_custom.c
        -:    0:Programs:5
        -:    1:/*************************************************************************
        -:    2:** File:
        -:    3:**   $Id: lc_custom.c.gcov 1.3 2016/11/22 17:32:23EST mdeschu Exp  $
        -:    4:**
        -:    5:**  Copyright © 2007-2014 United States Government as represented by the 
        -:    6:**  Administrator of the National Aeronautics and Space Administration. 
        -:    7:**  All Other Rights Reserved.  
        -:    8:**
        -:    9:**  This software was created at NASA's Goddard Space Flight Center.
        -:   10:**  This software is governed by the NASA Open Source Agreement and may be 
        -:   11:**  used, distributed and modified only pursuant to the terms of that 
        -:   12:**  agreement.
        -:   13:**
        -:   14:** Purpose: 
        -:   15:**   CFS Limit Checker (LC) mission specific code, including the 
        -:   16:**   custom function template.
        -:   17:**
        -:   18:**   $Log: lc_custom.c.gcov  $
        -:   18:**   Revision 1.3 2016/11/22 17:32:23EST mdeschu 
        -:   18:**   Update unit test results, gcov, and README for LC 2.1.0.0
        -:   19:**   Revision 1.2 2015/11/16 14:26:18EST wmoleski 
        -:   20:**   Most of the files were missing the Copyright comments.
        -:   21:**   Revision 1.2 2015/03/04 16:09:52EST sstrege 
        -:   22:**   Added copyright information
        -:   23:**   Revision 1.1 2012/07/31 16:53:38EDT nschweis 
        -:   24:**   Initial revision
        -:   25:**   Member added to project c:/MKSDATA/MKS-REPOSITORY/CFS-REPOSITORY/lcx/fsw/src/project.pj
        -:   26:**   Revision 1.3 2009/12/18 14:48:28EST lwalling 
        -:   27:**   Update local copy of SC start RTS command packet
        -:   28:**   Revision 1.2 2008/12/03 13:59:43EST dahardis 
        -:   29:**   Corrections from peer code review
        -:   30:**   Revision 1.1 2008/10/29 14:19:08EDT dahardison 
        -:   31:**   Initial revision
        -:   32:**   Member added to project c:/MKSDATA/MKS-REPOSITORY/CFS-REPOSITORY/lc/fsw/src/project.pj
        -:   33:** 
        -:   34:*************************************************************************/
        -:   35:
        -:   36:/*************************************************************************
        -:   37:** Includes
        -:   38:*************************************************************************/
        -:   39:#include "lc_custom.h"
        -:   40:#include "lc_tbldefs.h"
        -:   41:#include "lc_events.h"
        -:   42:#include "lc_mission_cfg.h"
        -:   43:
        -:   44:/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
        -:   45:/*                                                                 */
        -:   46:/* Initiate an RTS request                                         */
        -:   47:/*                                                                 */
        -:   48:/* NOTE: For complete prolog information, see 'lc_custom.h'        */
        -:   49:/*                                                                 */
        -:   50:/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */   
        2:   51:void LC_ExecuteRTS(uint16 RTSId)
        -:   52:{
        -:   53:    /***************************************************************
        -:   54:    ** This is a local declaration of the command message structure
        -:   55:    ** to initiate an RTS and has been placed here to allow the 
        -:   56:    ** the LC application to be built without including headers from
        -:   57:    ** any other applications (like Stored Commanding). 
        -:   58:    ** A mission may choose to remove this and use a message
        -:   59:    ** structure declared elsewhere instead.
        -:   60:    **
        -:   61:    ** This also applies to the LC_RTS_REQ_MID and LC_RTS_REQ_CC
        -:   62:    ** constants (see lc_mission_cfg.h).
        -:   63:    */
        -:   64:    typedef struct {
        -:   65:        uint8          CmdHeader[CFE_SB_CMD_HDR_SIZE];
        -:   66:
        -:   67:        uint16         RTSId;               
        -:   68:
        -:   69:    } LC_RTSRequest_t;
        -:   70:    
        -:   71:    LC_RTSRequest_t RTSRequest;
        -:   72:    /**************************************************************/
        -:   73:    
        2:   74:    CFE_SB_InitMsg((CFE_SB_Msg_t *) ((uint32) &RTSRequest),
        -:   75:            LC_RTS_REQ_MID, sizeof(LC_RTSRequest_t), TRUE);
        -:   76:
        2:   77:    CFE_SB_SetCmdCode((CFE_SB_Msg_t *) ((uint32) &RTSRequest), 
        -:   78:                                               LC_RTS_REQ_CC);
        -:   79:        
        2:   80:    RTSRequest.RTSId = RTSId;
        -:   81:        
        2:   82:    CFE_SB_SendMsg((CFE_SB_Msg_t *) ((uint32) &RTSRequest));
        -:   83:    
        2:   84:    return;
        -:   85:    
        -:   86:} /* end LC_ExecuteRTS */
        -:   87:
        -:   88:/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
        -:   89:/*                                                                 */
        -:   90:/* Mission specific custom function entry point                    */
        -:   91:/*                                                                 */
        -:   92:/* NOTE: For complete prolog information, see 'lc_custom.h'        */
        -:   93:/*                                                                 */
        -:   94:/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */   
        4:   95:uint8 LC_CustomFunction(uint16          WatchIndex,
        -:   96:                        uint32          ProcessedWPData,
        -:   97:                        CFE_SB_MsgPtr_t MessagePtr,
        -:   98:                        uint32          WDTCustomFuncArg)
        -:   99:{
        4:  100:    uint8  EvalResult = LC_WATCH_FALSE;
        -:  101:    
        -:  102:    /*
        -:  103:    ** This function is the entry point for all watchpoints where
        -:  104:    ** the OperatorID in the watchpoint definition table entry
        -:  105:    ** is set to LC_OPER_CUSTOM.
        -:  106:    ** 
        -:  107:    ** For this reason The first step would normally be to
        -:  108:    ** switch on the WatchIndex to figure out what watchpoint got
        -:  109:    ** us here. As an alternate, a mission may choose to use the
        -:  110:    ** WDTCustomFuncArg for this instead.
        -:  111:    */
        4:  112:    switch (WatchIndex)
        -:  113:    {
        -:  114:        case 0x0000:
        -:  115:        case 0x0001:
        -:  116:        default:
        4:  117:            CFE_EVS_SendEvent(LC_CFCALL_ERR_EID, CFE_EVS_ERROR,
        -:  118:                              "Unexpected LC_CustomFunction call: WP = %d",
        -:  119:                              WatchIndex);
        -:  120:            break;
        -:  121:        
        -:  122:    } /* end WatchIndex switch */
        -:  123:    
        4:  124:    return (EvalResult);
        -:  125:    
        -:  126:} /* end LC_CustomFunction */
        -:  127:
        -:  128:/************************/
        -:  129:/*  End of File Comment */
        -:  130:/************************/
